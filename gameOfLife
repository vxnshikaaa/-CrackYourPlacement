class Solution {
    public void gameOfLife(int[][] board) {
        // original  new  state
        //    0       0     0
        //    1       0     1
        //    0       1     2
        //    1       1     3
        int rows=board.length;
        int cols=board[0].length;
        for(int r=0; r<rows; r++){
            for(int c=0; c<cols; c++){
                int neighbour=count(board, r, c, rows, cols);
                if(board[r][c]==1){
                    if(neighbour==2 | neighbour==3){
                        board[r][c]=3; // mark 1 in new statev
                    }
                }else{
                    if(neighbour==3){
                        board[r][c]=2; // mark 1 in new state
                    }
                }
            }
        }
        for(int r=0; r<rows; r++){
            for(int c=0; c<cols; c++){
                if(board[r][c]==1){
                    board[r][c]=0;
                }else if(board[r][c]==2 || board[r][c]==3){
                    board[r][c]=1;
                }else{
                    board[r][c]=0;
                }
            }
        }
    }
    public int count(int[][] board, int r, int c, int rows, int cols){
        int cnt=0;
        for(int i=r-1; i<=r+1; i++){
            for(int j=c-1; j<=c+1; j++){
                if(i==r && j==c || i<0 || j<0 || i>=rows || j>=cols){
                    continue;
                }
                if(board[i][j]==1 || board[i][j]==3){
                    cnt++;
                }
            }
        }
        return cnt;
    }
}
